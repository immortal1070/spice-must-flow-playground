package io.immortal.spicemustflow.domain.${fn.toLowerCase($entity.name)}

data class ${entity.name}EventDto(
    val id: ${entity.name}Id,
#foreach( $attribute in $entity.nonKeyAttributes )
    var $attribute.name: $attribute.type,
#end
#if ( $entity.hasLinks() )
    #foreach( $link in $entity.links )
    var $link.fieldName: ${link.fieldType}Dto,
#end
#end
)
{
    constructor(${fn.toLowerCase($entity.name)}: ${entity.name}) : this(${fn.toLowerCase($entity.name)}.id,
#foreach( $attribute in $entity.nonKeyAttributes )
    ${fn.toLowerCase($entity.name)}.$attribute.name,
#end
#if ( $entity.hasLinks() )
    #foreach( $link in $entity.links )
        ${fn.toLowerCase($entity.name)}.$link.fieldName,
#end
#end
)
}

data class ${entity.name}Created(
    val ${fn.toLowerCase($entity.name)}: ${entity.name}EventDto
)

data class ${entity.name}Updated(
    val ${fn.toLowerCase($entity.name)}: ${entity.name}EventDto
)

data class ${entity.name}Deleted(
    val ${fn.toLowerCase($entity.name)}: ${entity.name}EventDto
)